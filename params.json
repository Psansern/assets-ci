{"name":"Assets","body":"# Simple Assets Library\r\n\r\nA simple assets library that has the ability to combine and minify your JavaScript and CSS assets.\r\nAdditionally there's a <a href=\"http://leafo.net/lessphp/\">LessCSS</a> compiler and a <a href=\"https://github.com/alxlit/coffeescript-php\">CoffeeScript</a> compiler.\r\n\r\n## Installation\r\n\r\nThe library can be installed as a <a href=\"http://getsparks.org/packages/assets/versions/HEAD/show\">CodeIgniter spark</a> like this:\r\n\r\n    php tools/spark install -v1.0.0 assets\r\n\r\nIf you don't have Sparks just head on over to their <a href=\"http://getsparks.org/install\">setup page</a> and follow the instructions.\r\n\r\nYou can also install it as a normal library by placing 3rd party libraries into the CodeIgniter third_party directory.\r\n\r\n## Third Party Libraries\r\n\r\nThe libraries <a href=\"https://github.com/rgrove/jsmin-php/\">JSMin</a>, <a href=\"http://code.google.com/p/cssmin/\">CSSMin</a>, <a href=\"http://leafo.net/lessphp/\">LessPHP</a> and <a href=\"https://github.com/alxlit/coffeescript-php\">CoffeeScript-PHP</a> are all created by third parties, but they're included in this package for convenience.\r\n\r\n## Requirements\r\n\r\n1. PHP 5.3+\r\n2. CodeIgniter 2.1\r\n3. Directory structure for the assets files, with a writeable cache directory\r\n\r\n## Documentation\r\n\r\nSet all your preferences in the config file (assets directories, options to minify and combine).\r\nNow you can use the helper methods in your views like this:\r\n\t\r\n    <?php Assets::css(array('bootstrap.less', 'init.css', 'style.css')); ?>\r\n    <?php Assets::js(array('libs/jquery.js', 'script.js', 'bean.coffee')); ?>\r\n\r\nThere's also a method for clearing all cached files:\r\n\t\r\n    <?php Assets::clear_cache(); ?>\r\n\r\nThe default configuration assumes your assets directory is in the root of your project. Be sure to set the permissions for the cache directory so it can be writeable.\r\n\r\n### LESS / CoffeeScript\r\n\r\nFiles with extensions .less and .coffee will automatically be processed through appropriate libraries.\r\n\r\n### Groups\r\n\r\nThere's also a possibility to define groups of assets. This can be useful when for e.g. you want separate scripts in you page header, and others in the footer. This can be accomplished like this:\r\n\r\n    <?php Assets::js_group('head',   array('libs/modernizr.js')); ?>\r\n    <?php Assets::js_group('footer', array('plugins.js', 'script.js')); ?>\r\n    \r\nThe same thing will work with CSS files. You can use this to show groups of CSS files for specific pages:\r\n\r\n    <?php Assets::css_group('global', array('style.css')); ?>\r\n    <?php Assets::css_group('login',  array('login.css')); ?>\r\n\r\n### Importing CSS files (@import)\r\n\r\nIncluding files via *@import* should work just fine, just be sure to use proper paths. Example of a stylesheet would be something like this:\r\n\r\n    @import \"bootstrap/bootstrap.less\";\r\n    @import \"libs/fancybox.css\";\r\n    \r\n    body { background: #f2f2f2; }\r\n    \r\n    â€¦\r\n\r\nJust keep in mind when using *@import* that those files are not scanned for changes and the cache wont be cleared in case you change a file that is included via *@import*.\r\n\r\n### Images\r\n\r\nA helper is also provided to display images from the directory setup in the config.\r\n\r\n    <?php echo Assets::img('logo.png'); ?>\r\n\r\nYou can also generate the img tag directly using a similar syntax as in the CodeIgniter HTML helper.\r\n\r\n    <?php echo Assets::img('logo.png', true, array('title' => 'Logo')); ?>\r\n\r\n## Frameworks / Libraries\r\n\r\nThe library has been tested with Twitter Bootstrap 2.0.1 and HTML5 Boilerplate 3.0. It wont work with the latest Bootstrap 2.0.2 because of a problem in LessPHP. I hope this will be fixed soon. And if you happen to use the library with a different framework (bootstrap), give me a shout and I'll put it on this list. So here it is:\r\n\r\n* Twitter Bootstrap 2.0.1 (2.0.2 not working yet) LESS\r\n* HTML5 Boilerplate 3.0\r\n\r\n## Directory structure example\r\n\r\n\t/application\r\n\t/assets\r\n\t\t/cache\r\n\t\t/css\r\n\t\t/images\r\n\t\t/js\r\n\t/sparks\r\n\t/system","tagline":"Simple assets library. Ability to combine, minify and use the Less and CoffeeScript syntax.","google":"UA-20635588-5","note":"Don't delete this file! It's used internally to help with page regeneration."}